name: Build and publish
on:
  push:
    branches: [master]
    pull_request:
    tags: [deploy]

jobs:
  build-and-push-backend:
    name: Backend - Build, containerize and push
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: "temurin" # See 'Supported distributions' for available options
          java-version: "17"
          cache: "maven"
      - name: Install dependencies
        run: mvn install
        working-directory: ./attendee
      - name: Execute Tests
        run: mvn test
        working-directory: ./attendee
      - name: Build java
        run: mvn compile
        working-directory: ./attendee
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF##*/})"
        id: extract_branch
        working-directory: ./attendee
      - name: Login to DockerHub
        uses: docker/login-action@v1
        if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/tags/deploy' }}
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Deploy
        run: mvn jib:build -Djib.to.tags=${{ steps.extract_branch.outputs.branch }}-${{ github.run_id }}
        if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/tags/deploy' }}
        working-directory: ./attendee

  build-and-push-frontend:
    name: Frontend - Build, containerize and push
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Install Dependencies
        run: yarn install --force --non-interactive
        working-directory: ./frontend
      - name: Run build
        run: yarn build
        working-directory: ./frontend
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF##*/})"
        id: extract_branch
        working-directory: ./attendee
      - name: Login to DockerHub
        uses: docker/login-action@v1
        if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/tags/deploy' }}
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/tags/deploy' }}
        with:
          push: true
          tags: kordondev/lager-melder-frontend:${{ steps.extract_branch.outputs.branch }}-${{ github.run_id }}
          file: ./frontend/Dockerfile
          context: ./frontend
